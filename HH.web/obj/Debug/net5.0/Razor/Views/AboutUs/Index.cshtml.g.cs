#pragma checksum "C:\Users\User\Desktop\hh.web\HH.web\Views\AboutUs\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1f75ad68681c93739b4211935c43e6c4bc43b2ba"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_AboutUs_Index), @"mvc.1.0.view", @"/Views/AboutUs/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "C:\Users\User\Desktop\hh.web\HH.web\Views\_ViewImports.cshtml"
using HH.web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\User\Desktop\hh.web\HH.web\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\User\Desktop\hh.web\HH.web\Views\AboutUs\Index.cshtml"
using HH.web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\User\Desktop\hh.web\HH.web\Views\AboutUs\Index.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1f75ad68681c93739b4211935c43e6c4bc43b2ba", @"/Views/AboutUs/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4fe118e1b816e57df5165d7bb5fdc3ef6575bd1b", @"/Views/_ViewImports.cshtml")]
    public class Views_AboutUs_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 6 "C:\Users\User\Desktop\hh.web\HH.web\Views\AboutUs\Index.cshtml"
  
    ViewData["Title"] = SharedLocalizer["About Us"];

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <h1 class=\"page-header\">\r\n                ");
#nullable restore
#line 14 "C:\Users\User\Desktop\hh.web\HH.web\Views\AboutUs\Index.cshtml"
           Write(SharedLocalizer["About Us"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </h1>\r\n        </div>\r\n    </div>\r\n   <div class=\"demo-container\">\r\n      <div id=\"grid\"></div>\r\n    </div>\r\n</div>\r\n    \r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>

  $(function() {
  const url = ""api/AboutUsAPI"";
  $('#grid').dxDataGrid({
    dataSource: DevExpress.data.AspNet.createStore({
      key: 'OrderID',
      loadUrl: `${url}/Orders`,
      insertUrl: `${url}/InsertOrder`,
      updateUrl: `${url}/UpdateOrder`,
      deleteUrl: `${url}/DeleteOrder`,
      onBeforeSend(method, ajaxOptions) {
        ajaxOptions.xhrFields = { withCredentials: true };
      },
    }),
    remoteOperations: true,
    columns: [{
      dataField: 'CustomerID',
      caption: 'Id',
      validationRules: [{
        type: 'stringLength',
        message: 'The field Customer must be a string with a maximum length of 5.',
        max: 5,
      }],
      lookup: {
        dataSource: DevExpress.data.AspNet.createStore({
          key: 'Value',
          loadUrl: `${url}/CustomersLookup`,
          onBeforeSend(method, ajaxOptions) {
            ajaxOptions.xhrFields = { withCredentials: true };
          },
        }),
        valueExpr: 'V");
                WriteLiteral(@"alue',
        displayExpr: 'Text',
      },
    }, {
      dataField: 'OrderDate',
      dataType: 'date',
      validationRules: [{
        type: 'required',
        message: 'The OrderDate field is required.',
      }],
    }, {
      dataField: 'Freight',
      headerFilter: {
        groupInterval: 100,
      },
      validationRules: [{
        type: 'range',
        message: 'The field Freight must be between 0 and 2000.',
        min: 0,
        max: 2000,
      }],
    }, {
      dataField: 'ShipCountry',
      validationRules: [{
        type: 'stringLength',
        message: 'The field ShipCountry must be a string with a maximum length of 15.',
        max: 15,
      }],
    }, {
      dataField: 'ShipVia',
      caption: 'Shipping Company',
      dataType: 'number',
      lookup: {
        dataSource: DevExpress.data.AspNet.createStore({
          key: 'Value',
          loadUrl: `${url}/ShippersLookup`,
          onBeforeSend(method, ajaxOptions) {
           ");
                WriteLiteral(@" ajaxOptions.xhrFields = { withCredentials: true };
          },
        }),
        valueExpr: 'Value',
        displayExpr: 'Text',
      },
    },
    ],
    filterRow: {
      visible: true,
    },
    headerFilter: {
      visible: true,
    },
    groupPanel: {
      visible: true,
    },
    scrolling: {
      mode: 'virtual',
    },
    height: 600,
    showBorders: true,
    masterDetail: {
      enabled: true,
      template(container, options) {
        $('<div>')
          .dxDataGrid({
            dataSource: DevExpress.data.AspNet.createStore({
              loadUrl: `${url}/OrderDetails`,
              loadParams: { orderID: options.data.OrderID },
              onBeforeSend(method, ajaxOptions) {
                ajaxOptions.xhrFields = { withCredentials: true };
              },
            }),
            showBorders: true,
          }).appendTo(container);
      },
    },
    editing: {
      allowAdding: true,
      allowUpdating: true,
      allowDe");
                WriteLiteral(@"leting: true,
    },
    grouping: {
      autoExpandAll: false,
    },
    summary: {
      totalItems: [{
        column: 'Freight',
        summaryType: 'sum',
      }],
      groupItems: [{
        column: 'Freight',
        summaryType: 'sum',
      }, {
        summaryType: 'count',
      },
      ],
    },
  });
});

</script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHtmlLocalizer<SharedResource> SharedLocalizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
